services:
  frontend:
    image: marwane2003/aurax:frontend-latest
    labels:
      - com.centurylinklabs.watchtower.enable=true  # ✅ Label added
    networks:
      - prod-network
    depends_on:
      - backend

  backend:
    image: marwane2003/aurax:backend-latest
    labels:
      - com.centurylinklabs.watchtower.enable=true  # ✅ Label added
    env_file:
      - .env
    # here ports proxy will hande it
    networks:
      - prod-network
    depends_on:
      - mysql

  mysql:
    image: mysql:8.0
    command: --default_authentication_plugin=mysql_native_password
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./mysql/db.sql:/docker-entrypoint-initdb.d/db.sql
      - $HOME/database:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - prod-network

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30 --cleanup --label-enable  # ✅ Correct command
    networks:
      - prod-network
    restart: unless-stopped  # ✅ Auto-restart Watchtower
  reverse-proxy:
    image: jc21/nginx-proxy-manager
    restart: unless-stopped
    ports:
      - "80:80"    # HTTP
      - "443:443"  # HTTPS
      - "81:81"    # Admin UI
    volumes:
      - ./nginx-data:/data
      - ./letsencrypt:/etc/letsencrypt
    networks:
      - prod-network
    depends_on:
      - frontend
      - backend
networks:
  prod-network:
    driver: bridge